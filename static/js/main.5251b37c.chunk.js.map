{"version":3,"sources":["components/add-list/add-list.js","components/redux/actions.js","components/redux/types.js","components/add-list/index.js","components/add-item/add-item.js","components/add-item/index.js","components/app-list-item/app-list-item.js","components/app-list/app-list.js","components/app-create-list/app-create-list.js","components/app/app.js","components/redux/listsReducer.js","components/redux/rootReducer.js","index.js"],"names":["AddList","state","name","isCreateMode","onChangeName","e","setState","target","value","onSubmit","preventDefault","trim","props","createList","onToggleMode","this","className","onChange","type","onClick","Component","mapDispatchToProps","payload","id","Date","now","toString","todoData","connect","AddItem","label","onLabelChange","createItem","todoLists","placeholder","rows","text","important","done","AppListItem","isModeRename","onDeleted","renameItem","deleteItem","parentId","list","lists","todoList","elements","map","items","index","itemProps","draggableId","key","provided","ref","innerRef","draggableProps","dragHandleProps","deleteList","el","droppableId","droppableProps","droppablePlaceholder","App","mode","modeRename","addItem","newItem","createTodoItem","idList","newTodoData","filter","item","onToggleImportant","onToggleDone","toggleProperty","deleteListItem","idx","findIndex","slice","addItemList","newItemList","createTodoItemList","idParent","arr","propName","oldItem","onDragEnd","direction","result","initialState","rootReducer","combineReducers","action","newTodoList","newTodoListItem","todoListItem","todoListItems","console","log","gragItem","destination","source","dragCard","boardCards","splice","newTodoState","newTodoCerds","newArray","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.5251b37c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {createList} from '../redux/actions';\r\n\r\n class AddList extends Component {\r\n    \r\n    state = {\r\n        name: '',\r\n        isCreateMode: false\r\n    }\r\n\r\n    onChangeName = (e) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const {name} = this.state\r\n        if(!name.trim()) {\r\n          return\r\n        }\r\n        \r\n        this.props.createList(name)\r\n        this.setState({\r\n            name: '',\r\n            isCreateMode: false\r\n        })\r\n        \r\n    }\r\n\r\n    onToggleMode = () => {\r\n      this.setState(({isCreateMode}) => {\r\n        return {\r\n          isCreateMode: !isCreateMode\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n  render() {\r\n \r\n    const {isCreateMode} = this.state\r\n    if(isCreateMode) {\r\n      return (\r\n        <form className=\"add-list\" onSubmit={this.onSubmit} >\r\n          <input\r\n          onChange={this.onChangeName} \r\n          value={this.state.name} />\r\n          <button type=\"submit\">Add list</button>\r\n        </form>\r\n      );\r\n    } else {\r\n      return (\r\n        <button onClick={this.onToggleMode}>Add list</button>\r\n      )\r\n    }\r\n\r\n    \r\n    \r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  createList\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(AddList)","import {CREATE_LIST, DELETE_LIST, CREATE_ITEM, DELETE_ITEM, DRAG_ITEM, RENAME_ITEM, DRAG_CARDS} from \"./types\";\r\nconst idx = 0;\r\nexport function createList(name) {\r\n  return {\r\n    type: CREATE_LIST,\r\n    payload: {\r\n      name: name,\r\n      id: Date.now().toString(),\r\n      todoData: [],\r\n      \r\n    },\r\n  };\r\n}\r\n\r\nexport function deleteList(id) {\r\n    return {\r\n        type: DELETE_LIST,\r\n        id: id\r\n    }\r\n}\r\n\r\n\r\nexport function createItem (text, id) {\r\n    return {\r\n        type: CREATE_ITEM,\r\n        id: id,\r\n        payload: {\r\n            label: text,\r\n            id: Date.now().toString(),\r\n            important: false, \r\n            done: false,\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteItem (id, parentId) {\r\n    return {\r\n        type: DELETE_ITEM,\r\n        id:id,\r\n        parentId: parentId\r\n    }\r\n}\r\n\r\nexport function renameItem() {\r\n    return {\r\n        type: RENAME_ITEM\r\n    }\r\n}\r\n\r\n\r\nexport function onDragEnd (result) {\r\n\r\n    return {\r\n        type: DRAG_ITEM,\r\n        result: result\r\n    } \r\n}\r\n\r\nexport function onDragCard(result) {\r\n   return {\r\n       type: DRAG_CARDS,\r\n       result: result\r\n   }\r\n\r\n\r\n}\r\n","export const CREATE_LIST = 'CREATE_LIST';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\n\r\nexport const CREATE_ITEM = 'CREATE_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\n\r\nexport const RENAME_ITEM = 'RENAME_ITEM'\r\n\r\n\r\nexport const DRAG_ITEM = 'DRAG_ITEM';\r\n\r\nexport const DRAG_CARDS ='DRAG_CARDS'\r\n","import AddList from './add-list'\r\n\r\nexport default AddList;","import React, { Component } from 'react';\r\nimport './add-item.css'\r\nimport {connect} from 'react-redux';\r\nimport {createItem} from '../redux/actions';\r\n\r\nclass AddItem extends Component {\r\n\r\n    state = {\r\n        label: '',\r\n        isCreateMode: false,\r\n\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    };\r\n \r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createItem(this.state.label, this.props.todoLists.id);\r\n        this.setState({\r\n\r\n            label: '',\r\n            isCreateMode: false\r\n        })\r\n    };\r\n\r\n    onToggleMode = () => {\r\n        this.setState(({isCreateMode}) => {\r\n            return {\r\n                isCreateMode: !isCreateMode\r\n            }\r\n        })\r\n    };\r\n    \r\n    \r\n    render() {\r\n        const {isCreateMode} = this.state;\r\n        if (isCreateMode) {\r\n            return (\r\n                <form className=\"add-item\"\r\n                    onSubmit={this.onSubmit}>\r\n                    <textarea type=\"text\" placeholder=\"add task\"\r\n                    className=\"add-item-input\"\r\n                    rows=\"2\"\r\n                    onChange={this.onLabelChange}  \r\n                    value={this.state.label}></textarea>\r\n\r\n                    <button type=\"submit\">add item</button>\r\n                </form>\r\n            );\r\n        } else {\r\n           return (\r\n            <button className=\"add-item-mode\" onClick={this.onToggleMode}>add item</button>\r\n           )\r\n        }\r\n        \r\n        \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    createItem\r\n};\r\n  \r\n  \r\nexport default connect(null, mapDispatchToProps)(AddItem)","import AddItem from './add-item'\r\n\r\nexport default AddItem","import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport \"./app-list-item.css\";\r\nimport  {renameItem} from \"../redux/actions\";\r\n\r\nclass AppListItem extends Component {\r\n\r\n  state = {\r\n  isModeRename: false,\r\n  };\r\n\r\n\r\n  onToggleMode = () => {\r\n    this.setState(({isModeRename}) => {\r\n      return {\r\n        isModeRename: !isModeRename\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      label,\r\n      onDeleted,\r\n      renameItem\r\n    } = this.props;\r\n    let classNames = \"todo-list-item\";\r\n\r\n\r\n    const { isModeRename } = this.state;\r\n    if (isModeRename) {\r\n      return (\r\n          <span className={classNames}>\r\n            <input className=\"todo-list-item-label\" ></input>\r\n          </span>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span className=\"todo-list-item-label\" >\r\n          {label}\r\n        </span>\r\n        <span className=\"btn-container\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm\"\r\n            onClick={renameItem}\r\n          >\r\n            <i className=\"fa fa-pencil\" />\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger btn-sm\"\r\n            onClick={onDeleted}\r\n          >\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  renameItem\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AppListItem)","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { deleteItem } from '../redux/actions';\r\nimport AppListItem from \"../app-list-item/app-list-item\";\r\nimport './app-list.css'\r\n\r\nconst AppList = ({ todoLists, deleteItem }) => {\r\n  const elements = todoLists.todoData.map((items, index) => {\r\n    const { id, ...itemProps } = items\r\n    return (\r\n      <Draggable draggableId={items.id} index={index} key={items.id}>\r\n        {provided => (\r\n          <li key={id} index={index} className=\"list-group-item\" ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n            <AppListItem {...itemProps}\r\n              index={index}\r\n              items={items}\r\n              onDeleted={() => deleteItem(id, todoLists.id)} \r\n            />\r\n          </li>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  });\r\n\r\n  return (\r\n\r\n    <ul className='list-group todo-list'>\r\n      {elements}\r\n    </ul>\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.lists.todoList\r\n  }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  deleteItem\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppList);\r\n","import React from \"react\";\r\nimport { Droppable, Draggable} from \"react-beautiful-dnd\";\r\nimport \"./app-create-list.css\";\r\nimport AddItem from \"../add-item\";\r\nimport AppList from \"../app-list/app-list\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteList } from \"../redux/actions\";\r\n\r\nconst AppCreateList = ({\r\n\r\n  list,\r\n  deleteList,\r\n\r\n}) => {\r\n  const createList = list.map((el, index) => {\r\n    return (\r\n        <Draggable draggableId={el.id} index={index} key={el.id}>\r\n          {(provided) => (\r\n              <div className=\"app-list-wrapper\" key={el.id} id={el.id}\r\n                   {...provided.draggableProps}\r\n                   {...provided.dragHandleProps}\r\n                   ref={provided.innerRef}\r\n              >\r\n                <div className=\"app-list-title\">\r\n                  <div className=\"list-title\">{el.name}</div>\r\n                  <button className=\"list-button\" onClick={() => deleteList(el.id)}>\r\n                    delete\r\n                  </button>\r\n                </div>\r\n                <Droppable droppableId={el.id} key={el.id} type='task'>\r\n                  {provided => (\r\n                      <div ref={provided.innerRef}{...provided.droppableProps}{...provided.droppablePlaceholder}>\r\n                        <AppList todoLists={el} />\r\n                        {provided.placeholder}\r\n                        <AddItem todoLists={el} />\r\n                      </div>\r\n                  )}\r\n                </Droppable>\r\n\r\n              </div>\r\n          )}\r\n\r\n        </Draggable>\r\n    );\r\n  });\r\n\r\n\r\n\r\n\r\n  return <div className=\"todo-wrapper\">{createList}</div>;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.lists.todoList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppCreateList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd'\r\nimport \"./app.css\";\r\nimport AddList from \"../add-list\";\r\nimport AppCreateList from \"../app-create-list/app-create-list\";\r\nimport { onDragEnd } from '../redux/actions'\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    mode: [\r\n      {isCreateMode: false},\r\n      {modeRename: false}\r\n\r\n    ]\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: Date.now(),\r\n      idParent: 444\r\n    };\r\n  }\r\n\r\n  addItem = (label,id) => {\r\n    const newItem = this.createTodoItem(label);\r\n    this.setState({\r\n      todoList: this.state.todoList.map((el) => {\r\n        if (el.id === id) {\r\n          return { ...el, todoData: [...el.todoData, newItem] };\r\n        }\r\n\r\n        return el;\r\n      }),\r\n    });\r\n  };\r\n\r\n  deleteItem = (id, idList) => {\r\n    this.setState({\r\n      todoList: this.state.todoList.map((el) => {\r\n\r\n        \r\n        if(el.id === idList) {\r\n          const newTodoData = el.todoData.filter((item) => item.id !== id)\r\n          return {...el, todoData: newTodoData }\r\n        }\r\n        \r\n        return el;\r\n      })\r\n\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    // console.log(id);\r\n    // this.setState({\r\n    //   todoList: this.state.todoList.map((el) => {\r\n        \r\n    //   })\r\n      \r\n    // });\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"done\"),\r\n      };\r\n    });\r\n  };\r\n\r\n\r\n\r\n  deleteListItem = (id) => {\r\n    this.setState(({ todoList }) => {\r\n      const idx = todoList.findIndex((el) => el.id === id);\r\n\r\n      const newTodoList = [\r\n        ...todoList.slice(0, idx),\r\n        ...todoList.slice(idx + 1),\r\n      ];\r\n\r\n      return {\r\n        todoList: newTodoList,\r\n      };\r\n    });\r\n  };\r\n\r\n  createTodoItemList(name) {\r\n    return {\r\n      name,\r\n      id: Date.now(),\r\n      todoData: [],\r\n    };\r\n  }\r\n\r\n  addItemList = (name) => {\r\n    const newItemList = this.createTodoItemList(name);\r\n\r\n    this.setState(({ todoList }) => {\r\n      const newArray = [...todoList, newItemList];\r\n\r\n      return {\r\n        todoList: newArray,\r\n      };\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.props.onDragEnd}>\r\n        <Droppable droppableId='all-cards' direction='horizontal' type='cards'>\r\n          { (provided) => (\r\n          <div className=\"app-container\"\r\n               {...provided.droppableProps}\r\n               ref={provided.innerRef}\r\n          >\r\n            <div className=\"todo-wrapper\">\r\n              <AppCreateList/>\r\n              <AddList/>\r\n            </div>\r\n            {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <AddList/>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  onDragEnd,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);","import {CREATE_LIST, DELETE_LIST, CREATE_ITEM, DELETE_ITEM, DRAG_ITEM, RENAME_ITEM, DRAG_CARDS} from './types';\r\n\r\nconst initialState = {\r\n    todoList: [\r\n        {\r\n            name: \"Task\",\r\n            id: \"444\",\r\n            todoData: [\r\n                { label: \"Change my phone\", important: false, done: false, id: \"98898978\" },\r\n                { label: \"Cook diner\", important: false, done: false, id: \"75656564534\" },\r\n            ],\r\n\r\n        },\r\n        {\r\n            name: \"In progress\",\r\n            id: '555',\r\n            todoData: [\r\n\r\n            ],\r\n\r\n        },\r\n        {\r\n            name: \"Done\",\r\n            id: '666',\r\n            todoData: [\r\n\r\n            ],\r\n\r\n        },\r\n    ],\r\n\r\n};\r\n\r\nexport const listsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case CREATE_LIST:\r\n            return { ...state, todoList: [...state.todoList, action.payload] };\r\n\r\n\r\n        case DELETE_LIST:\r\n            const newTodoList = state.todoList.filter((item) => item.id !== action.id);\r\n            return { ...state, todoList: newTodoList };\r\n\r\n        case CREATE_ITEM:\r\n\r\n            const newTodoListItem = state.todoList.map((el) => {\r\n\r\n                if (el.id === action.id) {\r\n                    return { ...el, todoData: [...el.todoData, action.payload] };\r\n                } else {\r\n                    return el\r\n                }\r\n\r\n            });\r\n            return { ...state, todoList: newTodoListItem };\r\n\r\n\r\n\r\n\r\n        case DELETE_ITEM:\r\n            const todoListItem = state.todoList.map((el) => {\r\n\r\n                if (el.id === action.parentId) {\r\n                    const todoListItems = el.todoData.filter((item) => item.id !== action.id);\r\n                    return { ...el, todoData: todoListItems }\r\n                } else {\r\n                    return el\r\n                }\r\n\r\n            });\r\n            return { ...state, todoList: todoListItem };\r\n\r\n\r\n\r\n        case RENAME_ITEM:\r\n            console.log(action.type);\r\n            return { ...state, todoList: [...state.todoList,] };\r\n\r\n\r\n\r\n\r\n\r\n\r\n        case DRAG_ITEM:\r\n            const { destination, source, draggableId, type } = action.result;\r\n\r\n\r\n\r\n\r\n\r\n            if (!destination) {\r\n                return;\r\n            };\r\n\r\n        // if (\r\n        //     destination.draggableId === source.draggableId &&\r\n        //     destination.index === source.index\r\n        // ) {\r\n        //     return;\r\n        // }\r\n\r\n            if(type === 'cards') {\r\n                // console.log()\r\n                let dragCard;\r\n                state.todoList.filter((el) => {\r\n                    if(el.id === draggableId) {\r\n                        dragCard = el\r\n                    }\r\n                    return el.id !== draggableId\r\n                });\r\n\r\n                const boardCards = state.todoList.slice();\r\n                boardCards.splice(source.index,1)\r\n                boardCards.splice(destination.index, 0, dragCard);\r\n\r\n                return { ...state, todoList: boardCards };\r\n            }\r\n\r\n            let gragItem;\r\n            const newTodoState = state.todoList.map((el) => {\r\n\r\n                const newItemList = el.todoData.filter((item) => {\r\n                    if (item.id === draggableId) {\r\n                        gragItem = item\r\n                    }\r\n                    return item.id !== draggableId\r\n                });\r\n\r\n                return { ...el, todoData: newItemList }\r\n            });\r\n\r\n            const newTodoCerds = newTodoState.map((el) => {\r\n                if (destination.droppableId === el.id) {\r\n\r\n                    const newArray = el.todoData.slice();\r\n                    newArray.splice(destination.index, 0, gragItem);\r\n\r\n                    return { ...el, todoData: newArray }\r\n\r\n                } else {\r\n                    return el\r\n                }\r\n\r\n            });\r\n\r\n            return { ...state, todoList: newTodoCerds };\r\n\r\n        case DRAG_CARDS:\r\n            console.log(action.result)\r\n            return { ...state, todoList: newTodoListItem };\r\n\r\n\r\n\r\n\r\n\r\n\r\n        default: return state;\r\n    }\r\n\r\n};\r\n\r\n\r\n","import { combineReducers } from \"redux\"\r\nimport {listsReducer} from './listsReducer'\r\nexport const rootReducer = combineReducers({\r\n \r\n    lists: listsReducer\r\n\r\n})","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport {createStore, compose} from 'redux';\nimport './index.css';\nimport App from './components/app/app';\nimport {Provider} from 'react-redux'\nimport { rootReducer } from \"./components/redux/rootReducer\";\n\n\nconst store = createStore(rootReducer, compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nconst app = (\n    <Provider store={store}>\n        <App></App>\n    </Provider>\n)\n\nReactDom.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}