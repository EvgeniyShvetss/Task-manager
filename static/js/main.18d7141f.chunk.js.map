{"version":3,"sources":["components/add-list/add-list.js","components/redux/actions.js","components/redux/types.js","components/add-list/index.js","components/add-item/add-item.js","components/add-item/index.js","components/app-list-item/app-list-item.js","components/app-list/app-list.js","components/app-create-list/app-create-list.js","components/settings/setting-bg.js","components/settings/settings.js","components/app/app.js","components/redux/listsReducer.js","components/redux/modeReducer.js","components/redux/backgroundReducer.js","components/redux/rootReducer.js","index.js"],"names":["AddList","state","name","isCreateMode","onChangeName","e","setState","target","value","onSubmit","preventDefault","trim","props","createList","onToggleMode","this","className","autoFocus","onChange","type","onClick","Component","mapDispatchToProps","payload","id","Date","now","toString","todoData","connect","AddItem","label","onLabelChange","createItem","todoLists","onEnterPress","keyCode","shiftKey","placeholder","rows","onKeyDown","text","important","done","AppListItem","isModeRename","renameItem","items","onDeleted","mode","modeRename","deleteItem","parentId","list","lists","todoList","elements","map","index","itemProps","draggableId","key","provided","ref","innerRef","draggableProps","dragHandleProps","deleteList","el","droppableId","droppableProps","droppablePlaceholder","addBackground","src","console","log","bg","settingBgItem","img","alt","Settings","hideModal","showModal","isCreateModal","App","addItem","newItem","createTodoItem","idList","newTodoData","filter","item","onToggleImportant","onToggleDone","toggleProperty","deleteListItem","idx","findIndex","slice","addItemList","newItemList","createTodoItemList","idParent","arr","propName","oldItem","onDragEnd","direction","result","initialState","rootReducer","combineReducers","action","newTodoList","newTodoListItem","todoListItem","todoListItems","newStateRename","elem","gragItem","destination","source","dragCard","boardCards","splice","newTodoState","newTodoCards","newArray","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.18d7141f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {createList} from '../redux/actions';\r\n\r\n class AddList extends Component {\r\n    \r\n    state = {\r\n        name: '',\r\n        isCreateMode: false\r\n    };\r\n\r\n    onChangeName = (e) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const {name} = this.state\r\n        if(!name.trim()) {\r\n          return\r\n        }\r\n        \r\n        this.props.createList(name)\r\n        this.setState({\r\n            name: '',\r\n            isCreateMode: false\r\n        })\r\n        \r\n    };\r\n\r\n    onToggleMode = () => {\r\n      this.setState(({isCreateMode}) => {\r\n        return {\r\n          isCreateMode: !isCreateMode\r\n        }\r\n      })\r\n    };\r\n\r\n\r\n  render() {\r\n \r\n    const {isCreateMode} = this.state\r\n    if(isCreateMode) {\r\n      return (\r\n        <form className=\"add-list\" onSubmit={this.onSubmit} >\r\n          <input autoFocus\r\n          onChange={this.onChangeName} \r\n          value={this.state.name} />\r\n          <button type=\"submit\">Add list</button>\r\n        </form>\r\n      );\r\n    } else {\r\n      return (\r\n        <button onClick={this.onToggleMode}>Add list</button>\r\n      )\r\n    }\r\n\r\n    \r\n    \r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  createList\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(AddList)","import {\r\n    CREATE_LIST,\r\n    DELETE_LIST,\r\n    CREATE_ITEM,\r\n    DELETE_ITEM,\r\n    DRAG_ITEM,\r\n    RENAME_ITEM,\r\n    DRAG_CARDS,\r\n    SHOW_MODAL, HIDE_MODAL, ADD_BACKGROUND\r\n} from \"./types\";\r\n\r\nexport function createList(name) {\r\n  return {\r\n    type: CREATE_LIST,\r\n    payload: {\r\n      name: name,\r\n      id: Date.now().toString(),\r\n      todoData: [],\r\n      \r\n    },\r\n  };\r\n}\r\n\r\nexport function deleteList(id) {\r\n    return {\r\n        type: DELETE_LIST,\r\n        id: id\r\n    }\r\n}\r\n\r\n\r\nexport function createItem (text, id) {\r\n    return {\r\n        type: CREATE_ITEM,\r\n        id: id,\r\n        payload: {\r\n            label: text,\r\n            id: Date.now().toString(),\r\n            important: false, \r\n            done: false,\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteItem (id, parentId) {\r\n    return {\r\n        type: DELETE_ITEM,\r\n        id:id,\r\n        parentId: parentId\r\n    }\r\n}\r\n\r\nexport function renameItem(label, id) {\r\n    return {\r\n        type: RENAME_ITEM,\r\n        label: label,\r\n        id:id\r\n    }\r\n}\r\n\r\n\r\nexport function onDragEnd (result) {\r\n\r\n    return {\r\n        type: DRAG_ITEM,\r\n        result: result\r\n    } \r\n}\r\n\r\nexport function onDragCard(result) {\r\n   return {\r\n       type: DRAG_CARDS,\r\n       result: result\r\n   }\r\n}\r\n\r\n\r\n\r\nexport function showModal() {\r\n    return {\r\n        type: SHOW_MODAL\r\n    }\r\n}\r\n\r\nexport function hideModal() {\r\n    return {\r\n        type: HIDE_MODAL\r\n    }\r\n}\r\n\r\n\r\nexport function addBackground(src) {\r\n    console.log(src)\r\n    return {\r\n        type: ADD_BACKGROUND,\r\n        src: src\r\n    }\r\n}\r\n","export const CREATE_LIST = 'CREATE_LIST';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\n\r\nexport const CREATE_ITEM = 'CREATE_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const RENAME_ITEM = 'RENAME_ITEM'\r\n\r\n\r\nexport const DRAG_ITEM = 'DRAG_ITEM';\r\nexport const DRAG_CARDS ='DRAG_CARDS';\r\n\r\n\r\nexport const SHOW_MODAL = 'SHOW_MODAL';\r\nexport const HIDE_MODAL = 'HIDE_MODAL';\r\n\r\n\r\nexport const ADD_BACKGROUND = 'ADD_BACKGROUND';","import AddList from './add-list'\r\n\r\nexport default AddList;","import React, { Component } from 'react';\r\nimport './add-item.css'\r\nimport {connect} from 'react-redux';\r\nimport {createItem} from '../redux/actions';\r\n\r\nclass AddItem extends Component {\r\n\r\n    state = {\r\n        label: '',\r\n        isCreateMode: false,\r\n\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    };\r\n \r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createItem(this.state.label, this.props.todoLists.id);\r\n        this.setState({\r\n            label: '',\r\n            isCreateMode: false\r\n        })\r\n    };\r\n\r\n    onEnterPress = (e) => {\r\n        if(e.keyCode === 13 && e.shiftKey === false) {\r\n            e.preventDefault();\r\n            this.props.createItem(this.state.label, this.props.todoLists.id);\r\n            this.setState({\r\n                label: '',\r\n                isCreateMode: false\r\n            })\r\n        }\r\n    }\r\n\r\n    onToggleMode = () => {\r\n        this.setState(({isCreateMode}) => {\r\n            return {\r\n                isCreateMode: !isCreateMode\r\n            }\r\n        })\r\n    };\r\n    \r\n    \r\n    render() {\r\n        const {isCreateMode} = this.state;\r\n        if (isCreateMode) {\r\n            return (\r\n                <form className=\"add-item\"\r\n                    onSubmit={this.onSubmit}>\r\n                    <textarea autoFocus\r\n                        type=\"text\"\r\n                        placeholder=\"add task\"\r\n                        className=\"add-item-input\"\r\n                        rows=\"2\"\r\n                        onChange={this.onLabelChange}\r\n                        value={this.state.label}\r\n                        onKeyDown={this.onEnterPress}>\r\n                    </textarea>\r\n\r\n                    <button type=\"submit\">add item</button>\r\n                </form>\r\n            );\r\n        } else {\r\n           return (\r\n            <button className=\"add-item-mode\" onClick={this.onToggleMode}>add item</button>\r\n           )\r\n        }\r\n        \r\n        \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    createItem\r\n};\r\n  \r\n  \r\nexport default connect(null, mapDispatchToProps)(AddItem)","import AddItem from './add-item'\r\n\r\nexport default AddItem","import React, { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport \"./app-list-item.css\";\r\nimport  {renameItem} from \"../redux/actions\";\r\n\r\n\r\nclass AppListItem extends Component {\r\n\r\n  state = {\r\n    label: '',\r\n  isModeRename: false,\r\n  };\r\n\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    })\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.renameItem(this.state.label, this.props.items.id);\r\n    this.setState({\r\n\r\n      label: '',\r\n      isModeRename: false,\r\n    })\r\n  };\r\n\r\n\r\n  onToggleMode = () => {\r\n    this.setState(({isModeRename}) => {\r\n      return {\r\n        isModeRename: !isModeRename\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      label,\r\n      onDeleted,\r\n    } = this.props;\r\n    let classNames = \"todo-list-item\";\r\n\r\n    const { isModeRename } = this.state;\r\n    if (isModeRename) {\r\n      return (\r\n          <form className=\"rename-item\"\r\n                onSubmit={this.onSubmit}>\r\n                    <input type=\"text\"\r\n                           autoFocus\r\n                              className=\"rename-item-input\"\r\n                              onChange={this.onLabelChange}\r\n                              value={this.state.label}>\r\n                    </input>\r\n          </form>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <span className={classNames}>\r\n        <span className=\"todo-list-item-label\" >\r\n          {label}\r\n        </span>\r\n        <span className=\"btn-container\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm\"\r\n            onClick={this.onToggleMode}\r\n          >\r\n            <i className=\"fa fa-pencil\" />\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger btn-sm\"\r\n            onClick={onDeleted}\r\n          >\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  renameItem,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    mode: state.mode.modeRename,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppListItem)","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { deleteItem } from '../redux/actions';\r\nimport AppListItem from \"../app-list-item/app-list-item\";\r\nimport './app-list.css'\r\n\r\nconst AppList = ({ todoLists, deleteItem }) => {\r\n  const elements = todoLists.todoData.map((items, index) => {\r\n    const { id, ...itemProps } = items\r\n    return (\r\n      <Draggable draggableId={items.id} index={index} key={items.id}>\r\n        {provided => (\r\n          <li key={id} index={index} className=\"list-group-item\" ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n            <AppListItem {...itemProps}\r\n              index={index}\r\n              items={items}\r\n              onDeleted={() => deleteItem(id, todoLists.id)} \r\n            />\r\n          </li>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  });\r\n\r\n  return (\r\n\r\n    <ul className='list-group todo-list'>\r\n      {elements}\r\n    </ul>\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    list: state.lists.todoList\r\n  }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  deleteItem\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppList);\r\n","import React from \"react\";\r\nimport { Droppable, Draggable} from \"react-beautiful-dnd\";\r\nimport \"./app-create-list.css\";\r\nimport AddItem from \"../add-item\";\r\nimport AppList from \"../app-list/app-list\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteList } from \"../redux/actions\";\r\n\r\nconst AppCreateList = ({\r\n\r\n  list,\r\n  deleteList,\r\n\r\n}) => {\r\n  const createList = list.map((el, index) => {\r\n    return (\r\n        <Draggable draggableId={el.id} index={index} key={el.id}>\r\n          {(provided) => (\r\n              <div className=\"app-list-wrapper\" key={el.id} id={el.id}\r\n                   {...provided.draggableProps}\r\n                   {...provided.dragHandleProps}\r\n                   ref={provided.innerRef}\r\n              >\r\n                <div className=\"app-list-title\">\r\n                  <div className=\"list-title\">{el.name}</div>\r\n                  <button className=\"list-button\" onClick={() => deleteList(el.id)}>\r\n                    delete\r\n                  </button>\r\n                </div>\r\n                <Droppable droppableId={el.id} key={el.id} type='task'>\r\n                  {provided => (\r\n                      <div ref={provided.innerRef}{...provided.droppableProps}{...provided.droppablePlaceholder}>\r\n                        <AppList todoLists={el} />\r\n                        {provided.placeholder}\r\n                        <AddItem todoLists={el} />\r\n                      </div>\r\n                  )}\r\n                </Droppable>\r\n              </div>\r\n          )}\r\n        </Draggable>\r\n    );\r\n  });\r\n\r\n\r\n\r\n\r\n  return <div className=\"todo-wrapper\">{createList}</div>;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    list: state.lists.todoList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppCreateList);\r\n","import React from \"react\";\nimport {connect} from 'react-redux'\nimport './setting-bg.css'\nimport { addBackground } from \"../redux/actions\";\n\n\n\nconst SettingBackgroundImg = ({addBackground, bg}) => {\n\n    console.log(bg)\n    const src = (e) => {\n        const srcImage = e.target.src;\n    };\n\n    const settingBgItem = bg.map((el, index) => {\n       return (\n           <div className=\"settings-bg__item\" key={index}  onClick={addBackground}>\n               <img src={el.img} key={index} alt=\"\"/>\n           </div>\n       )\n    });\n\n\n    return (\n        <div className=\"settings-bg\">\n            <div className=\"setting-bg-title\">\n                Background img\n            </div>\n\n            <div className=\"settings-bg__items\">\n                {settingBgItem}\n\n\n            </div>\n        </div>\n    )\n\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        bg: state.bg,\n    };\n};\n\nconst mapDispatchToProps = {\n    addBackground\n};\n\n\nexport  default connect(mapStateToProps, mapDispatchToProps)(SettingBackgroundImg);","import React, {Component} from \"react\";\nimport './settings.css'\nimport {connect} from 'react-redux'\nimport {showModal, hideModal} from \"../redux/actions\";\nimport SettingBackgroundImg from \"./setting-bg\";\nclass Settings extends Component  {\n\n\n\n\n\n    render() {\n        if(this.props.mode) {\n            return (\n                <div className='settings-modal'>\n                    <div className=\"img-close-container\" onClick={this.props.hideModal}>\n                    </div>\n                    <div className=\"settings-modal-items\">\n                        <SettingBackgroundImg/>\n                    </div>\n\n                </div>\n            )\n        }\n\n        return (\n            <div className='settings-container' >\n                <div className=\"settings-controller\">\n                    <div className=\"img-container\" onClick={this.props.showModal}>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        mode: state.mode.isCreateModal,\n    };\n};\n\nconst mapDispatchToProps = {\n    showModal,\n    hideModal,\n};\n\n\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Settings);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd'\r\nimport \"./app.css\";\r\nimport AddList from \"../add-list\";\r\nimport AppCreateList from \"../app-create-list/app-create-list\";\r\nimport { onDragEnd } from '../redux/actions'\r\nimport Settings from '../settings/settings'\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    mode: [\r\n      {isCreateMode: false},\r\n      {modeRename: false}\r\n\r\n    ]\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: Date.now(),\r\n      idParent: 444\r\n    };\r\n  }\r\n\r\n  addItem = (label,id) => {\r\n    const newItem = this.createTodoItem(label);\r\n    this.setState({\r\n      todoList: this.state.todoList.map((el) => {\r\n        if (el.id === id) {\r\n          return { ...el, todoData: [...el.todoData, newItem] };\r\n        }\r\n\r\n        return el;\r\n      }),\r\n    });\r\n  };\r\n\r\n  deleteItem = (id, idList) => {\r\n    this.setState({\r\n      todoList: this.state.todoList.map((el) => {\r\n\r\n        \r\n        if(el.id === idList) {\r\n          const newTodoData = el.todoData.filter((item) => item.id !== id)\r\n          return {...el, todoData: newTodoData }\r\n        }\r\n        \r\n        return el;\r\n      })\r\n\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    // console.log(id);\r\n    // this.setState({\r\n    //   todoList: this.state.todoList.map((el) => {\r\n        \r\n    //   })\r\n      \r\n    // });\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"done\"),\r\n      };\r\n    });\r\n  };\r\n\r\n\r\n\r\n  deleteListItem = (id) => {\r\n    this.setState(({ todoList }) => {\r\n      const idx = todoList.findIndex((el) => el.id === id);\r\n\r\n      const newTodoList = [\r\n        ...todoList.slice(0, idx),\r\n        ...todoList.slice(idx + 1),\r\n      ];\r\n\r\n      return {\r\n  todoList: newTodoList,\r\n};\r\n});\r\n};\r\n\r\ncreateTodoItemList(name) {\r\n  return {\r\n    name,\r\n    id: Date.now(),\r\n    todoData: [],\r\n  };\r\n}\r\n\r\naddItemList = (name) => {\r\n  const newItemList = this.createTodoItemList(name);\r\n\r\n  this.setState(({ todoList }) => {\r\n    const newArray = [...todoList, newItemList];\r\n\r\n    return {\r\n      todoList: newArray,\r\n    };\r\n  });\r\n};\r\n\r\n\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.props.onDragEnd}>\r\n        <Droppable droppableId='all-cards' direction='horizontal' type='cards'>\r\n          { (provided) => (\r\n          <div className=\"app-container\"\r\n               {...provided.droppableProps}\r\n               ref={provided.innerRef}\r\n          >\r\n            <div className=\"todo-wrapper\">\r\n              <AppCreateList/>\r\n              <AddList/>\r\n              <Settings />\r\n            </div>\r\n            {provided.placeholder}\r\n            </div>\r\n\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  onDragEnd,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);","import {CREATE_LIST, DELETE_LIST, CREATE_ITEM, DELETE_ITEM, DRAG_ITEM, RENAME_ITEM} from './types';\r\n\r\nconst initialState = {\r\n    todoList: [\r\n        {\r\n            name: \"Task\",\r\n            id: \"444\",\r\n            todoData: [\r\n                { label: \"Change my phone\", important: false, done: false, id: \"98898978\" },\r\n                { label: \"Cook diner\", important: false, done: false, id: \"75656564534\" },\r\n            ],\r\n\r\n        },\r\n        {\r\n            name: \"In progress\",\r\n            id: '555',\r\n            todoData: [\r\n\r\n            ],\r\n\r\n        },\r\n        {\r\n            name: \"Done\",\r\n            id: '666',\r\n            todoData: [\r\n\r\n            ],\r\n\r\n        },\r\n    ],\r\n};\r\n\r\n\r\nexport const listsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case CREATE_LIST:\r\n            return { ...state, todoList: [...state.todoList, action.payload] };\r\n\r\n\r\n        case DELETE_LIST:\r\n            const newTodoList = state.todoList.filter((item) => item.id !== action.id);\r\n            return { ...state, todoList: newTodoList };\r\n\r\n        case CREATE_ITEM:\r\n\r\n            const newTodoListItem = state.todoList.map((el) => {\r\n\r\n                if (el.id === action.id) {\r\n                    return { ...el, todoData: [...el.todoData, action.payload] };\r\n                } else {\r\n                    return el\r\n                }\r\n\r\n            });\r\n            return { ...state, todoList: newTodoListItem };\r\n\r\n        case DELETE_ITEM:\r\n            const todoListItem = state.todoList.map((el) => {\r\n\r\n                if (el.id === action.parentId) {\r\n                    const todoListItems = el.todoData.filter((item) => item.id !== action.id);\r\n                    return { ...el, todoData: todoListItems }\r\n                } else {\r\n                    return el\r\n                }\r\n\r\n            });\r\n            return { ...state, todoList: todoListItem };\r\n\r\n        case RENAME_ITEM:\r\n            const newStateRename = state.todoList.map((el) => {\r\n                el.todoData.map((elem) => {\r\n                    if(elem.id === action.id) {\r\n                       elem.label = action.label;\r\n                        return elem;\r\n                    } else {\r\n                        return elem;\r\n                    }\r\n                });\r\n                return el\r\n            });\r\n            return { ...state, todoList: newStateRename };\r\n\r\n\r\n        case DRAG_ITEM:\r\n            const { destination, source, draggableId, type } = action.result;\r\n\r\n            if (!destination) {\r\n                return;\r\n            }\r\n\r\n            if(type === 'cards') {\r\n\r\n                let dragCard;\r\n                state.todoList.filter((el) => {\r\n                    if(el.id === draggableId) {\r\n                        dragCard = el\r\n                    }\r\n                    return el.id !== draggableId\r\n                });\r\n\r\n                const boardCards = state.todoList.slice();\r\n                boardCards.splice(source.index,1)\r\n                boardCards.splice(destination.index, 0, dragCard);\r\n\r\n                return { ...state, todoList: boardCards };\r\n            }\r\n\r\n            let gragItem;\r\n            const newTodoState = state.todoList.map((el) => {\r\n\r\n                const newItemList = el.todoData.filter((item) => {\r\n                    if (item.id === draggableId) {\r\n                        gragItem = item\r\n                    }\r\n                    return item.id !== draggableId\r\n                });\r\n\r\n                return { ...el, todoData: newItemList }\r\n            });\r\n\r\n            const newTodoCards = newTodoState.map((el) => {\r\n                if (destination.droppableId === el.id) {\r\n\r\n                    const newArray = el.todoData.slice();\r\n                    newArray.splice(destination.index, 0, gragItem);\r\n\r\n                    return { ...el, todoData: newArray }\r\n\r\n                } else {\r\n                    return el\r\n                }\r\n\r\n            });\r\n\r\n            return { ...state, todoList: newTodoCards };\r\n\r\n\r\n\r\n\r\n\r\n        default: return state;\r\n    }\r\n\r\n};\r\n\r\n\r\n","import {HIDE_MODAL, RENAME_ITEM, SHOW_MODAL} from \"./types\";\n\nconst initialState = {\n    modeRename: false,\n    isCreateModal: false,\n};\n\nexport const modeReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case RENAME_ITEM:\n            return {...state, modeRename: true};\n\n        case SHOW_MODAL:\n            return {...state, isCreateModal: true};\n\n        case HIDE_MODAL:\n            return {...state, isCreateModal: false};\n\n\n\n        default: return state;\n    }\n};","import {} from \"./types\";\n\nconst initialState = [\n    {img: \"https://sites.google.com/site/prirodanaha/_/rsrc/1468741750018/home/%D0%96%D0%B8%D0%B2%D0%B0%D1%8F-%D0%BF%D1%80%D0%B8%D1%80%D0%BE%D0%B4%D0%B0.jpg\",},\n    {img: \"http://cdn11.overnature.net/3200/863.jpg\"},\n    {img: \"https://w-dog.ru/wallpapers/10/14/426721039464376/gory-sneg-zima-ozero-doma-bereg-priroda-pasmurno.jpg\"},\n    {img: \"https://w-dog.ru/wallpapers/10/15/424757584451248/yuzhnaya-islandiya-skandinaviya-zima-okean-bereg-gory-ldiny.jpg\"},\n\n\n];\n\nexport const backgroundReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n\n\n        default: return state;\n    }\n};","import { combineReducers } from \"redux\";\r\nimport {listsReducer} from './listsReducer';\r\nimport {modeReducer} from \"./modeReducer\";\r\nimport {backgroundReducer} from './backgroundReducer';\r\nexport const rootReducer = combineReducers({\r\n \r\n    lists: listsReducer,\r\n    mode: modeReducer,\r\n    bg: backgroundReducer,\r\n\r\n});","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport {createStore, compose} from 'redux';\nimport './index.css';\nimport App from './components/app/app';\nimport {Provider} from 'react-redux'\nimport { rootReducer } from \"./components/redux/rootReducer\";\n\n\nconst store = createStore(rootReducer, compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nconst app = (\n    <Provider store={store}>\n        <App></App>\n    </Provider>\n)\n\nReactDom.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}